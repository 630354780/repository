/*! @flatjs/forge MIT https://github.com/flatjs */
"use strict";Object.defineProperty(exports,"__esModule",{value:true});var e=require("path");var s=require("fs");var r=require("less");var t=require("resolve");const o={prefix:"~",aliases:{"@":e.join(process.cwd(),"src")},projectCwd:process.cwd()};const i=e=>new RegExp(`^${e}(["'/])(.*?)`,"g");const n=(s,r,t)=>{for(const[o,n]of Object.entries(t)){const t=e.isAbsolute(n)?n:e.join(s,n);r=r.replace(i(o),`${t}$1$2`)}return r};class c extends r.FileManager{constructor(e){super();this.options=void 0;this.supports=(e,s)=>{const r=new RegExp("^"+this.options.prefix,"i");return r.test(e)||r.test(s)};this.supportsSync=this.supports;this.options=e}resolve(r,o){const{prefix:i,aliases:c,projectCwd:p}=this.options;r=r.replace(new RegExp("^"+i,"i"),"");o=o.replace(i,"");o=e.resolve(o);let l;try{l=t.sync(r,{basedir:p,extensions:[".less",".css"],packageFilter(e){if(!e.style){return e}if(typeof e.style==="string"){e.main=e.style;return e}return e},paths:process.env.NODE_PATH?process.env.NODE_PATH.split(process.platform==="win32"?";":":"):[o]})}catch{l=n(p,r,c)}if(!l||!s.existsSync(l)){throw new Error(`No correct less '@import()' can be resolved: ${r}`)}return l}tryAppendExtension(e){return e}tryAppendLessExtension(e){return e}loadFileSync(e,s,r,t){try{e=this.resolve(e,s)}catch(e){return{error:e}}return super.loadFileSync.call(this,e,"",r,t)}async loadFile(e,s,r,t){try{e=this.resolve(e,s)}catch(e){return new Promise(((s,r)=>{r(e)}))}return super.loadFile.call(this,e,"",r,t)}}class p{constructor(e){this.options=o;this.minVersion=void 0;this.options=Object.assign({},o,e)}install(e,s){s.addFileManager(new c(this.options))}}exports.LessImportAliasPlugin=p;
